/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/admin/pin_event": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Pin Event */
        post: operations["pin_event_admin_pin_event_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/pin_location": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Pin Location */
        post: operations["pin_location_admin_pin_location_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/pinned_events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pinned Events */
        get: operations["get_pinned_events_admin_pinned_events_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/pinned_locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Pinned Locations */
        get: operations["get_pinned_locations_admin_pinned_locations_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/unpin_event/{event_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Unpin Event */
        delete: operations["unpin_event_admin_unpin_event__event_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/admin/unpin_location/{location_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Unpin Location */
        delete: operations["unpin_location_admin_unpin_location__location_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Root */
        get: operations["read_root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/query/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Process Query */
        post: operations["process_query_query__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/get-chat/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Chat */
        get: operations["get_chat_get_chat__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/get-chats/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Chats */
        get: operations["get_chats_get_chats__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Chat */
        Chat: {
            /** Id */
            id: string;
            /**
             * Last Updated
             * Format: date-time
             */
            last_updated: string;
            /** Messages */
            messages: components["schemas"]["ChatMessage"][];
        };
        /** ChatMessage */
        ChatMessage: {
            user_or_chatbot: components["schemas"]["UserOrChatbot"];
            /** Message */
            message: string;
        };
        /** Event */
        Event: {
            /** Id */
            id: string;
            /** Name */
            name: string;
            /** Location */
            location: string;
            /** Description */
            description?: string | null;
            /** Date */
            date?: string | null;
            /** Category */
            category?: string | null;
            /** Url */
            url?: string | null;
            /**
             * Priority
             * @default 0
             */
            priority: number | null;
            /**
             * Pinned
             * @default false
             */
            pinned: boolean | null;
        };
        /** EventMessage */
        EventMessage: {
            /** Message */
            message: string;
            event: components["schemas"]["Event"];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * Location
         * @example {
         *       "amenity": "cafe",
         *       "city": "New York",
         *       "description": "A popular cafe located within Central Park.",
         *       "id": "123abc",
         *       "lat": 40.785091,
         *       "lon": -73.968285,
         *       "name": "Central Park Cafe"
         *     }
         */
        Location: {
            /**
             * Id
             * @description Unique identifier for the location (e.g., generated by the Overpass API)
             */
            id: string;
            /**
             * Name
             * @description Name of the location (e.g., cafe or museum name)
             */
            name: string;
            /**
             * City
             * @description City where the location is situated
             */
            city: string;
            /**
             * Amenity
             * @description Type of amenity (e.g., cafe, museum, park)
             */
            amenity: string;
            /**
             * Lat
             * @description Latitude coordinate of the location
             */
            lat: number;
            /**
             * Lon
             * @description Longitude coordinate of the location
             */
            lon: number;
            /**
             * Description
             * @description Optional description or additional details about the location
             */
            description?: string | null;
        };
        /** LocationMessage */
        LocationMessage: {
            /** Message */
            message: string;
            location: components["schemas"]["Location"];
        };
        /** Message */
        Message: {
            /** Message */
            message: string;
        };
        /** PinnedEvents */
        PinnedEvents: {
            /** Pinned Events */
            pinned_events: components["schemas"]["Event"][];
        };
        /** PinnedLocations */
        PinnedLocations: {
            /** Pinned Locations */
            pinned_locations: components["schemas"]["Location"][];
        };
        /** QueryRequest */
        QueryRequest: {
            /** User Input */
            user_input: string;
            /** Session Id */
            session_id: string;
        };
        /** QueryResponse */
        QueryResponse: {
            /** Id */
            id: string;
            /** Message */
            message: string;
        };
        /**
         * UserOrChatbot
         * @enum {string}
         */
        UserOrChatbot: "user" | "chatbot";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    pin_event_admin_pin_event_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Event"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventMessage"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pin_location_admin_pin_location_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Location"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationMessage"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_pinned_events_admin_pinned_events_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PinnedEvents"];
                };
            };
        };
    };
    get_pinned_locations_admin_pinned_locations_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PinnedLocations"];
                };
            };
        };
    };
    unpin_event_admin_unpin_event__event_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                event_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    unpin_location_admin_unpin_location__location_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                location_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    process_query_query__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QueryRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["QueryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_chat_get_chat__get: {
        parameters: {
            query: {
                session_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Chat"] | null;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_chats_get_chats__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string[];
                };
            };
        };
    };
}
